import numpy as np
import matplotlib.pyplot as plt
plt.style.use('ggplot')

# Jerlov I
JI = np.array([
    [300, 0.163, 2.08e-02],
    [310, 0.134, 1.81e-02],
    [350, 0.048, 1.08e-02],
    [375, 0.030, 8.11e-03],
    [400, 0.022, 6.20e-03],
    [425, 0.017, 4.82e-03],
    [450, 0.018, 3.81e-03],
    [475, 0.019, 3.06e-03],
    [500, 0.026, 2.49e-03],
    [525, 0.046, 2.05e-03],
    [550, 0.062, 1.70e-03],
    [575, 0.082, 1.43e-03],
    [600, 0.228, 1.22e-03],
    [625, 0.295, 1.04e-03],
    [650, 0.334, 8.99e-04],
    [675, 0.434, 7.82e-04],
    [700, 0.582, 6.85e-04]
])

# Jerlov II
JII = np.array([
    [300, 0.343, 1.014],
    [310, 0.273, 0.957],
    [350, 0.095, 0.776],
    [375, 0.0540, 0.689],
    [400, 0.0355, 0.616],
    [425, 0.0257, 0.555],
    [450, 0.0241, 0.504],
    [475, 0.0228, 0.459],
    [500, 0.0288, 0.421],
    [525, 0.0469, 0.387],
    [550, 0.0622, 0.358],
    [575, 0.0821, 0.332],
    [600, 0.228, 0.309],
    [625, 0.296, 0.288],
    [650, 0.334, 0.270],
    [675, 0.436, 0.253],
    [700, 0.582, 0.238]
])

# Jerlov III
JIII = np.array([
    [300, 0.568, 2.76, 0.860],
    [310, 0.452, 2.61, 0.719],
    [350, 0.164, 2.12, 0.343],
    [375, 0.094, 1.88, 0.234],
    [400, 0.0615, 1.69, 0.175],
    [425, 0.0449, 1.52, 0.140],
    [450, 0.0388, 1.38, 0.124],
    [475, 0.0335, 1.26, 0.110],
    [500, 0.0358, 1.152, 0.109],
    [525, 0.0507, 1.06, 0.129],
    [550, 0.0646, 0.980, 0.144],
    [575, 0.0838, 0.908, 0.164],
    [600, 0.229, 0.845, 0.324],
    [625, 0.297, 0.788, 0.390],
    [650, 0.336, 0.737, 0.426],
    [675, 0.439, 0.692, 0.528],
    [700, 0.583, 0.650, 0.672],
])

# Jerlov IA
JIA = np.array([
    [300, 0.221, 2.55e-02],
    [310, 0.181, 2.26e-02],
    [350, 0.0673, 1.45e-02],
    [375, 0.0413, 1.14e-02],
    [400, 0.0295, 9.20e-03],
    [425, 0.0225, 7.55e-03],
    [450, 0.0221, 6.31e-03],
    [475, 0.0216, 5.36e-03],
    [500, 0.0282, 4.61e-03],
    [525, 0.0468, 4.02e-03],
    [550, 0.0622, 3.54e-03],
    [575, 0.0821, 3.15e-03],
    [600, 0.228, 2.83e-03],
    [625, 0.295, 2.56e-03],
    [650, 0.334, 2.34e-03],
    [675, 0.435, 2.14e-03],
    [700, 0.582, 1.98e-03]
])

# Jerlov IB
JIB = np.array([
    [300, 0.273, 0.125],
    [310, 0.221, 0.118],
    [350, 0.0810, 0.0968],
    [375, 0.0481, 0.0872],
    [400, 0.0331, 0.0795],
    [425, 0.0246, 0.0732],
    [450, 0.0235, 0.0680],
    [475, 0.0225, 0.0635],
    [500, 0.0287, 0.0597],
    [525, 0.0469, 0.0565],
    [550, 0.0623, 0.0536],
    [575, 0.0822, 0.0511],
    [600, 0.2278, 0.0488],
    [625, 0.296, 0.0468],
    [650, 0.334, 0.0450],
    [675, 0.435, 0.0434],
    [700, 0.582, 0.0420]
])

# Jerlov IC
JIC = np.array([
    [300, 2.686, 1.037,3.294],
    [310, 2.083, 0.979,2.576],
    [350, 0.721, 0.793,0.947],
    [375, 0.386, 0.704,0.539],
    [400, 0.227, 0.630,0.340],
    [425, 0.147, 0.567,0.236],
    [450, 0.105, 0.514,0.179],
    [475, 0.077, 0.469,0.139],
    [500, 0.064, 0.429,0.120],
    [525, 0.068, 0.395,0.121],
    [550, 0.076, 0.365,0.129],
    [575, 0.092, 0.338,0.146],
    [600, 0.236, 0.314,0.317],
    [625, 0.304, 0.293,0.395],
    [650, 0.344, 0.274,0.439],
    [675, 0.455, 0.257,0.568],
    [700, 0.586, 0.242,0.721],
])

# Jerlov 3C
J3C = np.array([
    [300, 4.733, 3.00],
    [310, 3.668, 2.83],
    [350, 1.287, 2.30],
    [375, 0.685, 2.04],
    [400, 0.388, 1.83],
    [425, 0.236, 1.65],
    [450, 0.154, 1.50],
    [475, 0.105, 1.36],
    [500, 0.081, 1.25],
    [525, 0.078, 1.15],
    [550, 0.082, 1.06],
    [575, 0.095, 0.985],
    [600, 0.239, 0.916],
    [625, 0.307, 0.855],
    [650, 0.346, 0.800],
    [675, 4.733, 3.00],
    [700, 3.668, 2.83]
])

# Jerlov 5C
J5C = np.array([
    [300, 5.36, 3.73],
    [310, 4.34, 3.53],
    [350, 1.78, 2.87],
    [375, 1.05, 2.55],
    [400, 0.660, 2.28],
    [425, 0.437, 2.06],
    [450, 0.297, 1.87],
    [475, 0.204, 1.71],
    [500, 0.151, 1.56],
    [525, 0.127, 1.44],
    [550, 0.117, 1.33],
    [575, 0.119, 1.23],
    [600, 5.36, 3.73],
    [625, 4.34, 3.53],
    [650, 1.78, 2.87],
    [675, 1.05, 2.55],
    [700, 0.660, 2.28]
])

# Jerlov 7C
J7C = np.array([
    [300, 5.11, 6.56],
    [310, 4.40, 6.20],
    [350, 2.17, 5.04],
    [375, 1.45, 4.49],
    [400, 1.03, 4.02],
    [425, 0.753, 3.63],
    [450, 0.542, 3.30],
    [475, 0.388, 3.01],
    [500, 0.290, 2.76],
    [525, 0.233, 2.54],
    [550, 0.195, 2.35],
    [575, 0.175, 2.18],
    [600, 0.301, 2.03],
    [625, 0.367, 1.89],
    [650, 0.403, 1.77],
    [675, 0.559, 1.66],
    [700, 0.621, 1.56]
])

# Jerlov 9C
J9C = np.array([
    [300, 5.466, 8.76],
    [310, 4.900, 8.28],
    [350, 2.856, 6.73],
    [375, 2.103, 5.99],
    [400, 1.613, 5.36],
    [425, 1.242, 4.84],
    [450, 0.943, 4.39],
    [475, 0.709, 4.01],
    [500, 0.543, 3.67],
    [525, 0.430, 3.38],
    [550, 0.348, 3.12],
    [575, 0.291, 2.89],
    [600, 0.390, 2.69],
    [625, 0.436, 2.51],
    [650, 0.456, 2.35],
    [675, 0.604, 2.20],
    [700, 0.651, 2.07]
])

blue_w = (400, 500)
green_w = (500, 600)
red_w = (600, 700)

J = JIB
tt = "IB"

J_b = J[J[:,0]>=400]
J_b = J_b[J_b[:,0]<=500]
u_a_b = J_b[:,1].mean()

J_g = J[J[:,0]>=500]
J_g = J_g[J_g[:,0]<=600]
u_a_g = J_g[:,1].mean()

J_r = J[J[:,0]>=600]
J_r = J_r[J_r[:,0]<=700]
u_a_r = J_r[:,1].mean()

print(f"aborption({u_a_r}, {u_a_g}, {u_a_b})")

u_b_b = J_b[:,2].mean()
u_b_g = J_g[:,2].mean()
u_b_r = J_r[:,2].mean()
print(f"scattering({u_b_r}, {u_b_g}, {u_b_b})")

fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, sharex=True, layout='constrained', figsize=[4.8, 3.6])

fig.suptitle(f'Jerlov {tt}')

ax1.fill_between(J_b.T[0], [u_a_b]*len(J_b.T[0]), color='lightblue')
ax1.plot(J_b.T[0], J_b.T[1], color='b')
ax1.fill_between(J_g.T[0], [u_a_g]*len(J_g.T[0]), color='lightgreen')
ax1.plot(J_g.T[0], J_g.T[1], color='g')
ax1.fill_between(J_r.T[0], [u_a_r]*len(J_r.T[0]), color='salmon')
ax1.plot(J_r.T[0], J_r.T[1], color='r')

ax1.set_xlabel('wavelength (nm)')
ax1.set_ylabel(r'absorption (m$^{-1}$)')

ax2.fill_between(J_b.T[0], [u_b_b]*len(J_b.T[0]), color='lightblue')
ax2.plot(J_b.T[0], J_b.T[2], color='b')
ax2.fill_between(J_g.T[0], [u_b_g]*len(J_g.T[0]), color='lightgreen')
ax2.plot(J_g.T[0], J_g.T[2], color='g')
ax2.fill_between(J_r.T[0], [u_b_r]*len(J_r.T[0]), color='salmon')
ax2.plot(J_r.T[0], J_r.T[2], color='r')

ax2.set_xlabel('wavelength (nm)')
ax2.set_ylabel(r'scattering (m$^{-1}$)')

fig = plt.figure(layout='constrained')

fig.suptitle(f'Jerlov {tt}')

plt.yscale("log", base=10)

plt.plot(J[:,0], J[:,1], label="absorption")
plt.plot(J[:,0], J[:,2], label="scattering")

plt.xlabel('wavelength (nm)')
plt.ylabel(r'a / b (m$^{-1}$)')

plt.legend()

plt.show()